[
    {
      "question": "What is the differences between uncontrolled and controlled components?",
      "ans": "In a nutshell, controlled components are those where the parent component manages the state, and uncontrolled components are those where the component manages its own state. Controlled components are more flexible and provide better control over the state of the component, whereas uncontrolled components are simpler to use and require less code to implement."
    },
  
    {
      "question": "How to validate React props using PropTypes?",
      "ans": "PropTypes is a built-in library in React that allows you to specify the type of props that your component should receive, as well as whether they are required or optional."
    },
  
    {
      "question": "What the difference between nodejs and express js?",
      "ans": "Node.js is a runtime environment for executing JavaScript code on the server, while Express.js is a framework that provides a set of tools and features for building web applications on top of Node.js. While you can use Node.js to build a web application from scratch, Express.js provides a higher level of abstraction that makes it easier to build web applications and APIs by providing a set of pre-built tools and features."
    },
  
    {
      "question": "What is a custom hook, and why will you create a custom hook?",
      "ans": "A React custom hook is a JavaScript function that starts with the prefix use and follows the rules of Hooks in React. It allows you to extract reusable logic and stateful functionality from a React component so that it can be shared across multiple components in your application.A custom hook can encapsulate any logic that a React component might need, such as managing state, performing side effects, and interacting with APIs. By creating a custom hook, you can reuse this logic across different components in your application, without having to write the same code multiple times."
    }
  ]
  